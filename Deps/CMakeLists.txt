CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(KrayoDeps)

IF(WIN32)
    # force using static runtime linking
    IF("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
        ADD_DEFINITIONS("/MDd")
    ELSE("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
        ADD_DEFINITIONS("/MD")
    ENDIF("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
ELSEIF(UNIX)
    # force Position Independent Code - required when linking deps with libKrayo.so
    ADD_DEFINITIONS("-fPIC")
ENDIF()

# in case we get called as root CMakeLists.txt, ex from MSVC solution
IF(NOT DEFINED KRAYO_DEPS_DIRECTORY)
    SET(KRAYO_DEPS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
ENDIF(NOT DEFINED KRAYO_DEPS_DIRECTORY)

ADD_SUBDIRECTORY(lkCommon)

SET(SHADERC_SKIP_INSTALL ON CACHE BOOL "Skip installation")
SET(SHADERC_SKIP_TESTS ON CACHE BOOL "Skip building tests")
ADD_SUBDIRECTORY(shaderc/src)

# Copy outputs to one specified dir
IF(NOT KRAYO_DEPS_OUTPUT_DIRECTORY)
    IF(WIN32)
        SET(KRAYO_DEPS_OUTPUT_DIRECTORY ${KRAYO_DEPS_DIRECTORY}/Bin/${CMAKE_GENERATOR_PLATFORM}/${CMAKE_BUILD_TYPE}/ CACHE INTERNAL "KrayoDeps output dir")
    ELSEIF(UNIX)
        SET(KRAYO_DEPS_OUTPUT_DIRECTORY ${KRAYO_DEPS_DIRECTORY}/bin/${CMAKE_BUILD_TYPE}/ CACHE INTERNAL "KrayoDeps output dir")
    ENDIF(WIN32)
ENDIF(NOT KRAYO_DEPS_OUTPUT_DIRECTORY)

ADD_CUSTOM_TARGET(KrayoDepsPostBuild ALL DEPENDS lkCommon shaderc
    COMMENT "Commands called post-build Krayo dependencies"
)

ADD_CUSTOM_COMMAND(TARGET KrayoDepsPostBuild POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:lkCommon> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:shaderc> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:shaderc_util> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:SPIRV-Tools> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:SPIRV-Tools-opt> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:glslang> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:HLSL> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:OSDependent> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:OGLCompiler> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:SPIRV> ${KRAYO_DEPS_OUTPUT_DIRECTORY}
                   VERBATIM
                   )

FILE(MAKE_DIRECTORY ${KRAYO_DEPS_OUTPUT_DIRECTORY})
