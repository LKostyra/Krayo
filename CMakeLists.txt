CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(Krayo)

INCLUDE(FindPkgConfig)

# assume Release build
IF(NOT DEFINED BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
ELSE(NOT DEFINED BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE ${BUILD_TYPE})
ENDIF(NOT DEFINED BUILD_TYPE)

MESSAGE(STATUS "Krayo build type: ${CMAKE_BUILD_TYPE}")

IF("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
    ADD_DEFINITIONS(-O0 -ggdb -D_DEBUG)
ELSE("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
    ADD_DEFINITIONS(-O2)
ENDIF("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")


SET(KRAYO_ROOT_DIRECTORY ${CMAKE_SOURCE_DIR})
SET(KRAYOGAME_ROOT_DIRECTORY ${CMAKE_SOURCE_DIR})
SET(KRAYO_OUTPUT_DIRECTORY ${KRAYO_ROOT_DIRECTORY}/bin/${CMAKE_BUILD_TYPE})


SET(KRAYO_TARGET Krayo)
SET(KRAYOGAME_TARGET KrayoGame)


MACRO(KRAYO_COPY_RESULT TARGET)
    ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD COMMAND
                       ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${TARGET}> ${KRAYO_OUTPUT_DIRECTORY})
ENDMACRO(KRAYO_COPY_RESULT)


ADD_SUBDIRECTORY(Deps)


STRING(TOLOWER ${CMAKE_BUILD_TYPE} BUILD_TYPE_LOWERCASE)
MESSAGE(${BUILD_TYPE_LOWERCASE})
LINK_DIRECTORIES(${KRAYO_ROOT_DIRECTORY}/Deps/fbxsdk/lib/gcc4/x64/${BUILD_TYPE_LOWERCASE})

ADD_SUBDIRECTORY(Krayo)
ADD_SUBDIRECTORY(KrayoGame)


FILE(MAKE_DIRECTORY ${KRAYO_OUTPUT_DIRECTORY})
